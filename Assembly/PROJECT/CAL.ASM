.MODEL	SMALL
.STACK	100H
.DATA
TITLE0	DB	'********************',0AH,0DH,' This is Calculator'
	DB	0AH,0DH,'********************',0AH,0DH,'$'
TITLE1	DB	'      Operator',0AH,0DH
	DB	'********************',0AH,0DH,'$'
TITLE2	DB	'(ex) 23+34*21-13/2=     ',0AH,0DH
	DB	'--------------------',0AH,0DH,'$'
TITLE3	DB	'23+34	... 57	',0AH,0DH,'$'
TITLE4	DB	'57*21	... 1197	',0AH,0DH,'$'
TITLE5	DB	'119-13	... 106	',0AH,0DH,'$'
TITLE6	DB	'184/2	... 92	',0AH,0DH,'--------------------'
	DB	0AH,0DH,'$'
TITLE7	DB	'Please Press =',0AH,0DH,'--------------------'
	DB	0AH,0DH,0AH,0DH,'$'
ERR0	DB	'OPERATOR ERROR.$'
ERR1	DB	'OverFlow ERROR.$'

PREV	DB	' '
POST	DB	' '
TEN	DW	10
FIRST	DB	0

.CODE
MAIN	PROC
	MOV	AX,@DATA
	MOV	DS,AX

;START PRINT

	MOV	AH,9
	LEA	DX,TITLE0
	INT	21H

	LEA	DX,TITLE1
	INT	21H

	LEA	DX,TITLE2
	INT	21H

	LEA	DX,TITLE3
	INT	21H

	LEA	DX,TITLE4
	INT	21H

	LEA	DX,TITLE5
	INT	21H

	LEA	DX,TITLE6
	INT	21H

	LEA	DX,TITLE7
	INT	21H


;START

	XOR	CX,CX					;60

@WHILEST:
	CALL	READN
	CMP	AX,128
	JL	@FIR
	JMP	@OVER

@FIR:
	CMP	FIRST,0
	JNE	@CONTINUE
	MOV	FIRST,2
	JMP	@SKIP

@OVER:
	MOV	AH,9
	LEA	DX,ERR1
	INT	21H
	JMP	@QUIT
@CONTINUE:
	MOV	BX,AX
	MOV	AX,CX
	CALL	OPER

	CMP	PREV,'@'
	JNE	@SKIP
	JMP	@QUIT
@SKIP:
	MOV	DL,POST
	MOV	PREV,DL
	CMP	POST,'='
	JNE	@WHILEEND
	JMP	@EXIT
@WHILEEND:
	MOV	CX,AX
	JMP	@WHILEST
@EXIT:
	XOR	CX,CX
@DECIMAL:
	XOR	DX,DX
	DIV	TEN					;100
	PUSH	DX
	INC	CX
	CMP	AX,0000H
	JNE	@DECIMAL
	MOV	AH,2
@POPDEC:
	POP	DX
	ADD	DX,30H
	INT	21H
	LOOP	@POPDEC
@QUIT:
	MOV	AH,4CH
	INT	21H

MAIN	ENDP

READN	PROC
	PUSH	BX
	PUSH	CX
	MOV	CX,10D					;120
	XOR	BX,BX
@READN1:
	MOV	AH,6
	MOV	DL,0FFH
	INT	21H
	JE	@READN1				;125
	CMP	AL,'0'
	JB	@READN2
	CMP	AL,'9'
	JA	@READN2
	MOV	DL,AL
	INT	21H
	SUB	AL,'0'
	PUSH	AX
	MOV	AX,BX
	MUL	CX

	MOV	BX,AX
	POP	AX
	XOR	AH,AH
	ADD	BX,AX
	JMP	@READN1
@READN2:
	MOV	POST,AL
	MOV	DL,AL
	INT	21H
	MOV	AX,BX
	POP	CX
	POP	BX
	RET
READN	ENDP

OPER	PROC
	CMP	PREV,'*'
	JNZ	@DIVISION
	MUL	BL
	JMP	@FINISH
@DIVISION:
	CMP	PREV,'/'
	JNZ	@PLUS
	XOR	DX,DX
	DIV	BX
	JMP	@FINISH
@PLUS:
	CMP	PREV,'+'
	JNZ	@MINUS
	ADD	AX,BX
	JMP	@FINISH
@MINUS:
	CMP	PREV,'-'
	JNZ	@ERROR
	SUB	AX,BX
	JMP	@FINISH
@ERROR:
	MOV	DL,'@'
	MOV	PREV,DL
	MOV	AH,9
	LEA	DX,ERR0
	INT	21H
@FINISH:
	RET
OPER	ENDP

	END	MAIN